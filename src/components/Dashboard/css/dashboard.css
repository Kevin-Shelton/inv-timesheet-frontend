import React, { useState, useEffect } from 'react';
import { supabase } from '../../supabaseClient';
import DashboardHeader from './DashboardHeader';
import WelcomeCard from './WelcomeCard';
import HolidaySection from './HolidaySection';
import WeeklyChart from './WeeklyChart';
import ActivityRing from './ActivityRing';
import ProjectsChart from './ProjectsChart';
import WhoIsInOutPanel from './WhoIsInOutPanel';

// Import the main dashboard CSS (which imports all other CSS files)
import '../../css/dashboard.css';

const Dashboard = () => {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // Load user data and profile
  useEffect(() => {
    const loadUserData = async () => {
      try {
        setLoading(true);
        
        // Get authenticated user
        const { data: { user: authUser }, error: authError } = await supabase.auth.getUser();
        
        if (authError) {
          throw authError;
        }

        if (authUser) {
          // Get user profile with role and other details
          const { data: profile, error: profileError } = await supabase
            .from('users')
            .select(`
              id,
              full_name,
              email,
              role,
              employment_type,
              is_exempt,
              pay_type,
              status,
              department,
              job_title,
              hire_date
            `)
            .eq('id', authUser.id)
            .single();

          if (profileError) {
            console.error('Error loading user profile:', profileError);
            // Set basic user data if profile fetch fails
            setUser({
              id: authUser.id,
              email: authUser.email,
              full_name: authUser.user_metadata?.full_name || 'User',
              role: 'employee' // Default role
            });
          } else {
            setUser({
              ...authUser,
              ...profile
            });
          }
        }
      } catch (error) {
        console.error('Error loading user data:', error);
        setError('Failed to load user data');
      } finally {
        setLoading(false);
      }
    };

    loadUserData();

    // Listen for auth changes
    const { data: { subscription } } = supabase.auth.onAuthStateChange(
      async (event, session) => {
        if (event === 'SIGNED_OUT') {
          setUser(null);
        } else if (event === 'SIGNED_IN' && session?.user) {
          loadUserData();
        }
      }
    );

    return () => subscription.unsubscribe();
  }, []);

  // Show loading state
  if (loading) {
    return (
      <div className="dashboard-wrapper">
        <div className="dashboard-loading">
          <div className="loading-spinner"></div>
          <p>Loading dashboard...</p>
        </div>
      </div>
    );
  }

  // Show error state
  if (error) {
    return (
      <div className="dashboard-wrapper">
        <div className="dashboard-error">
          <h3>Error Loading Dashboard</h3>
          <p>{error}</p>
          <button onClick={() => window.location.reload()}>
            Retry
          </button>
        </div>
      </div>
    );
  }

  // Check if user is admin (for future admin panel integration)
  const isAdmin = user?.role === 'admin' || user?.role === 'administrator';

  return (
    <div className="dashboard-wrapper">
      {/* Dashboard Header */}
      <DashboardHeader user={user} />

      {/* Admin Notice (if admin user) */}
      {isAdmin && (
        <div className="admin-notice">
          <strong>ðŸ‘‘ Admin User Detected:</strong> Admin panel will be available after completing the overtime system setup.
          <br />
          <small>User: {user?.full_name} ({user?.email}) - Role: {user?.role?.toUpperCase()}</small>
        </div>
      )}

      {/* Main Dashboard Layout */}
      <div className="dashboard-layout">
        {/* Left Side - Main Content with Vertical Scroll */}
        <div className="dashboard-left">
          {/* Top Row: Welcome Card + Holiday Section */}
          <div className="top-row">
            <div className="welcome-section">
              <WelcomeCard user={user} />
            </div>
            <div className="holiday-section">
              <HolidaySection user={user} />
            </div>
          </div>

          {/* Chart Section: Weekly Chart */}
          <div className="chart-section">
            <WeeklyChart user={user} />
          </div>

          {/* Bottom Row: Activity Ring + Projects Chart */}
          <div className="bottom-row">
            <div className="activity-section">
              <ActivityRing user={user} />
            </div>
            <div className="projects-section">
              <ProjectsChart user={user} />
            </div>
          </div>
        </div>

        {/* Right Side - Sidebar */}
        <div className="dashboard-right">
          <WhoIsInOutPanel user={user} />
        </div>
      </div>

      {/* Inline styles for loading/error states that aren't in CSS */}
      <style jsx>{`
        .dashboard-loading {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          min-height: 400px;
          background-color: #F9FAFB;
        }

        .loading-spinner {
          width: 40px;
          height: 40px;
          border: 4px solid #FB923C;
          border-top: 4px solid transparent;
          border-radius: 50%;
          animation: spin 1s linear infinite;
          margin-bottom: 16px;
        }

        .dashboard-loading p {
          color: #6B7280;
          font-size: 14px;
          margin: 0;
        }

        .dashboard-error {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          min-height: 400px;
          background-color: #FEF2F2;
          text-align: center;
          color: #DC2626;
          padding: 24px;
        }

        .dashboard-error h3 {
          margin: 0 0 8px 0;
        }

        .dashboard-error p {
          margin: 0 0 16px 0;
        }

        .dashboard-error button {
          background-color: #DC2626;
          color: white;
          border: none;
          padding: 8px 16px;
          border-radius: 4px;
          cursor: pointer;
          font-size: 14px;
        }

        .dashboard-error button:hover {
          background-color: #B91C1C;
        }

        .admin-notice {
          background-color: #FEF3C7;
          border: 1px solid #F59E0B;
          border-radius: 8px;
          padding: 12px 16px;
          margin: 16px 24px;
          font-size: 14px;
          color: #92400E;
        }

        .bottom-row {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 24px;
          flex-shrink: 0;
        }

        .activity-section,
        .projects-section {
          background: white;
          border-radius: 12px;
          box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
          padding: 24px;
        }

        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }

        @media (max-width: 1024px) {
          .bottom-row {
            grid-template-columns: 1fr;
          }
        }
      `}</style>
    </div>
  );
};

export default Dashboard;

